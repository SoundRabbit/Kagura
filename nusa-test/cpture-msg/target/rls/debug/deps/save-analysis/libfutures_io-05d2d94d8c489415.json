{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21","program":"C:\\Users\\nenou_sa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_io","--edition=2018","C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=05d2d94d8c489415","-C","extra-filename=-05d2d94d8c489415","--out-dir","d:\\program\\Kagura\\nusa-test\\cpture-msg\\target\\rls\\debug\\deps","-L","dependency=d:\\program\\Kagura\\nusa-test\\cpture-msg\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\nenou_sa\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\program\\Kagura\\nusa-test\\cpture-msg\\target\\rls\\debug\\deps\\libfutures_io-05d2d94d8c489415.rmeta"},"prelude":{"crate_id":{"name":"futures_io","disambiguator":[7790746107521033668,0]},"crate_root":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src","external_crates":[{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}}],"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":20831,"line_start":1,"line_end":558,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":20829,"byte_end":20830,"line_start":558,"line_end":558,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":20831,"line_start":1,"line_end":558,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95}],"decl_id":null,"docs":" Asynchronous I/O","sig":null,"attributes":[{"value":"/ Asynchronous I/O","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":21,"byte_end":24,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains the `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":25,"byte_end":96,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ `AsyncBufRead` traits, the asynchronous analogs to","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":97,"byte_end":151,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/ `std::io::{Read, Write, Seek, BufRead}`. The primary difference is","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":152,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ that these traits integrate with the asynchronous task system.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":223,"byte_end":289,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":290,"byte_end":293,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ All items of this library are only available when the `std` feature of this","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":294,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":374,"byte_end":431,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":476,"byte_end":564,"line_start":12,"line_end":12,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1810,"byte_end":1819,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"name":"AsyncRead","qualname":"::if_std::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1418,"byte_end":1448,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1453,"byte_end":1456,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Read` trait, but integrates","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1461,"byte_end":1533,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_read`","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1538,"byte_end":1607,"line_start":40,"line_end":40,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Read::read`, will automatically queue the current task","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1612,"byte_end":1686,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1691,"byte_end":1767,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1772,"byte_end":1795,"line_start":43,"line_end":43,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2563,"byte_end":2572,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"poll_read","qualname":"::if_std::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1830,"byte_end":1882,"line_start":45,"line_end":45,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1891,"byte_end":1894,"line_start":46,"line_end":46,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1903,"byte_end":1961,"line_start":47,"line_end":47,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1970,"byte_end":1973,"line_start":48,"line_end":48,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":1982,"byte_end":2041,"line_start":49,"line_end":49,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2050,"byte_end":2108,"line_start":50,"line_end":50,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2117,"byte_end":2198,"line_start":51,"line_end":51,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2207,"byte_end":2233,"line_start":52,"line_end":52,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2242,"byte_end":2245,"line_start":53,"line_end":53,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2254,"byte_end":2274,"line_start":54,"line_end":54,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2283,"byte_end":2286,"line_start":55,"line_end":55,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2295,"byte_end":2358,"line_start":56,"line_end":56,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2367,"byte_end":2433,"line_start":57,"line_end":57,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2442,"byte_end":2500,"line_start":58,"line_end":58,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2509,"byte_end":2551,"line_start":59,"line_end":59,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3864,"byte_end":3882,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"::if_std::AsyncRead::poll_read_vectored","value":"pub fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2713,"byte_end":2780,"line_start":66,"line_end":66,"column_start":9,"column_end":76}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2789,"byte_end":2807,"line_start":67,"line_end":67,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2816,"byte_end":2819,"line_start":68,"line_end":68,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_read`, but allows data to be read","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2828,"byte_end":2897,"line_start":69,"line_end":69,"column_start":9,"column_end":78}},{"value":"/ into multiple buffers using a single operation.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2906,"byte_end":2957,"line_start":70,"line_end":70,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2966,"byte_end":2969,"line_start":71,"line_end":71,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":2978,"byte_end":3036,"line_start":72,"line_end":72,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3045,"byte_end":3048,"line_start":73,"line_end":73,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3057,"byte_end":3116,"line_start":74,"line_end":74,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3125,"byte_end":3183,"line_start":75,"line_end":75,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3192,"byte_end":3273,"line_start":76,"line_end":76,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3282,"byte_end":3308,"line_start":77,"line_end":77,"column_start":9,"column_end":35}},{"value":"/ By default, this method delegates to using `poll_read` on the first","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3317,"byte_end":3388,"line_start":78,"line_end":78,"column_start":9,"column_end":80}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3397,"byte_end":3473,"line_start":79,"line_end":79,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3482,"byte_end":3534,"line_start":80,"line_end":80,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3543,"byte_end":3546,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3555,"byte_end":3575,"line_start":82,"line_end":82,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3584,"byte_end":3587,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3596,"byte_end":3659,"line_start":84,"line_end":84,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3668,"byte_end":3734,"line_start":85,"line_end":85,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3743,"byte_end":3801,"line_start":86,"line_end":86,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":3810,"byte_end":3852,"line_start":87,"line_end":87,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4639,"byte_end":4649,"line_start":110,"line_end":110,"column_start":15,"column_end":25},"name":"AsyncWrite","qualname":"::if_std::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Write bytes asynchronously.","sig":null,"attributes":[{"value":"/ Write bytes asynchronously.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4235,"byte_end":4266,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4271,"byte_end":4274,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Write` trait, but integrates","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4279,"byte_end":4352,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ with the asynchronous task system. In particular, the `poll_write`","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4357,"byte_end":4427,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ method, unlike `Write::write`, will automatically queue the current task","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4432,"byte_end":4508,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ for wakeup and return if the writer cannot take more data, rather than blocking","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4513,"byte_end":4596,"line_start":108,"line_end":108,"column_start":5,"column_end":88}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4601,"byte_end":4624,"line_start":109,"line_end":109,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5583,"byte_end":5593,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"poll_write","qualname":"::if_std::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4660,"byte_end":4714,"line_start":111,"line_end":111,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4723,"byte_end":4726,"line_start":112,"line_end":112,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4735,"byte_end":4796,"line_start":113,"line_end":113,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4805,"byte_end":4808,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4817,"byte_end":4879,"line_start":115,"line_end":115,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4888,"byte_end":4946,"line_start":116,"line_end":116,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":4955,"byte_end":5036,"line_start":117,"line_end":117,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5045,"byte_end":5071,"line_start":118,"line_end":118,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5080,"byte_end":5083,"line_start":119,"line_end":119,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5092,"byte_end":5112,"line_start":120,"line_end":120,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5121,"byte_end":5124,"line_start":121,"line_end":121,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5133,"byte_end":5196,"line_start":122,"line_end":122,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5205,"byte_end":5271,"line_start":123,"line_end":123,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5280,"byte_end":5338,"line_start":124,"line_end":124,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5347,"byte_end":5389,"line_start":125,"line_end":125,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5398,"byte_end":5401,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"/ `poll_write` must try to make progress by flushing the underlying object if","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5410,"byte_end":5489,"line_start":127,"line_end":127,"column_start":9,"column_end":88}},{"value":"/ that is the only way the underlying object can become writable again.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5498,"byte_end":5571,"line_start":128,"line_end":128,"column_start":9,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6906,"byte_end":6925,"line_start":158,"line_end":158,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"::if_std::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `bufs` into the object using vectored","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5730,"byte_end":5799,"line_start":135,"line_end":135,"column_start":9,"column_end":78}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5808,"byte_end":5826,"line_start":136,"line_end":136,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5835,"byte_end":5838,"line_start":137,"line_end":137,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_write`, but allows data from multiple buffers to be written","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5847,"byte_end":5942,"line_start":138,"line_end":138,"column_start":9,"column_end":104}},{"value":"/ using a single operation.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5951,"byte_end":5980,"line_start":139,"line_end":139,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":5989,"byte_end":5992,"line_start":140,"line_end":140,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6001,"byte_end":6062,"line_start":141,"line_end":141,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6071,"byte_end":6074,"line_start":142,"line_end":142,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6083,"byte_end":6145,"line_start":143,"line_end":143,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6154,"byte_end":6212,"line_start":144,"line_end":144,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6221,"byte_end":6302,"line_start":145,"line_end":145,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6311,"byte_end":6337,"line_start":146,"line_end":146,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6346,"byte_end":6349,"line_start":147,"line_end":147,"column_start":9,"column_end":12}},{"value":"/ By default, this method delegates to using `poll_write` on the first","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6358,"byte_end":6430,"line_start":148,"line_end":148,"column_start":9,"column_end":81}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6439,"byte_end":6515,"line_start":149,"line_end":149,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6524,"byte_end":6576,"line_start":150,"line_end":150,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6585,"byte_end":6588,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6597,"byte_end":6617,"line_start":152,"line_end":152,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6626,"byte_end":6629,"line_start":153,"line_end":153,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6638,"byte_end":6701,"line_start":154,"line_end":154,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6710,"byte_end":6776,"line_start":155,"line_end":155,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6785,"byte_end":6843,"line_start":156,"line_end":156,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":6852,"byte_end":6894,"line_start":157,"line_end":157,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8140,"byte_end":8150,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"::if_std::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempt to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7267,"byte_end":7337,"line_start":172,"line_end":172,"column_start":9,"column_end":79}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7346,"byte_end":7368,"line_start":173,"line_end":173,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7377,"byte_end":7380,"line_start":174,"line_end":174,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7389,"byte_end":7435,"line_start":175,"line_end":175,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7444,"byte_end":7447,"line_start":176,"line_end":176,"column_start":9,"column_end":12}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7456,"byte_end":7520,"line_start":177,"line_end":177,"column_start":9,"column_end":73}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7529,"byte_end":7587,"line_start":178,"line_end":178,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7596,"byte_end":7678,"line_start":179,"line_end":179,"column_start":9,"column_end":91}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7687,"byte_end":7717,"line_start":180,"line_end":180,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7726,"byte_end":7729,"line_start":181,"line_end":181,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7738,"byte_end":7758,"line_start":182,"line_end":182,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7767,"byte_end":7770,"line_start":183,"line_end":183,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7779,"byte_end":7842,"line_start":184,"line_end":184,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7851,"byte_end":7917,"line_start":185,"line_end":185,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7926,"byte_end":7984,"line_start":186,"line_end":186,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":7993,"byte_end":8035,"line_start":187,"line_end":187,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8044,"byte_end":8047,"line_start":188,"line_end":188,"column_start":9,"column_end":12}},{"value":"/ It only makes sense to do anything here if you actually buffer data.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8056,"byte_end":8128,"line_start":189,"line_end":189,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8936,"byte_end":8946,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"poll_close","qualname":"::if_std::AsyncWrite::poll_close","value":"pub fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<()>>","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Attempt to close the object.","sig":null,"attributes":[{"value":"/ Attempt to close the object.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8225,"byte_end":8257,"line_start":192,"line_end":192,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8266,"byte_end":8269,"line_start":193,"line_end":193,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8278,"byte_end":8324,"line_start":194,"line_end":194,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8333,"byte_end":8336,"line_start":195,"line_end":195,"column_start":9,"column_end":12}},{"value":"/ If closing cannot immediately complete, this function returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8345,"byte_end":8410,"line_start":196,"line_end":196,"column_start":9,"column_end":74}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8419,"byte_end":8477,"line_start":197,"line_end":197,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8486,"byte_end":8568,"line_start":198,"line_end":198,"column_start":9,"column_end":91}},{"value":"/ progress towards closing.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8577,"byte_end":8606,"line_start":199,"line_end":199,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8615,"byte_end":8618,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8627,"byte_end":8647,"line_start":201,"line_end":201,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8656,"byte_end":8659,"line_start":202,"line_end":202,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8668,"byte_end":8731,"line_start":203,"line_end":203,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8740,"byte_end":8806,"line_start":204,"line_end":204,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8815,"byte_end":8873,"line_start":205,"line_end":205,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":8882,"byte_end":8924,"line_start":206,"line_end":206,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9415,"byte_end":9424,"line_start":217,"line_end":217,"column_start":15,"column_end":24},"name":"AsyncSeek","qualname":"::if_std::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9023,"byte_end":9053,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9058,"byte_end":9061,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Seek` trait, but integrates","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9066,"byte_end":9138,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_seek`","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9143,"byte_end":9212,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Seek::seek`, will automatically queue the current task","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9217,"byte_end":9291,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9296,"byte_end":9372,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9377,"byte_end":9400,"line_start":216,"line_end":216,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10279,"byte_end":10288,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"::if_std::AsyncSeek::poll_seek","value":"pub fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<Result<u64>>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Attempt to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempt to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9435,"byte_end":9491,"line_start":218,"line_end":218,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9500,"byte_end":9503,"line_start":219,"line_end":219,"column_start":9,"column_end":12}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9512,"byte_end":9585,"line_start":220,"line_end":220,"column_start":9,"column_end":82}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9594,"byte_end":9620,"line_start":221,"line_end":221,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9629,"byte_end":9632,"line_start":222,"line_end":222,"column_start":9,"column_end":12}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9641,"byte_end":9690,"line_start":223,"line_end":223,"column_start":9,"column_end":58}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9699,"byte_end":9769,"line_start":224,"line_end":224,"column_start":9,"column_end":79}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9778,"byte_end":9839,"line_start":225,"line_end":225,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9848,"byte_end":9851,"line_start":226,"line_end":226,"column_start":9,"column_end":12}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9860,"byte_end":9872,"line_start":227,"line_end":227,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9881,"byte_end":9884,"line_start":228,"line_end":228,"column_start":9,"column_end":12}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9893,"byte_end":9949,"line_start":229,"line_end":229,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9958,"byte_end":9961,"line_start":230,"line_end":230,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9970,"byte_end":9990,"line_start":231,"line_end":231,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":9999,"byte_end":10002,"line_start":232,"line_end":232,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10011,"byte_end":10074,"line_start":233,"line_end":233,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10083,"byte_end":10149,"line_start":234,"line_end":234,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10158,"byte_end":10216,"line_start":235,"line_end":235,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10225,"byte_end":10267,"line_start":236,"line_end":236,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10834,"byte_end":10846,"line_start":251,"line_end":251,"column_start":15,"column_end":27},"name":"AsyncBufRead","qualname":"::if_std::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10428,"byte_end":10458,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10463,"byte_end":10466,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::BufRead` trait, but integrates","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10471,"byte_end":10546,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ with the asynchronous task system. In particular, the `poll_fill_buf`","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10551,"byte_end":10624,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ method, unlike `BufRead::fill_buf`, will automatically queue the current task","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10629,"byte_end":10710,"line_start":248,"line_end":248,"column_start":5,"column_end":86}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10715,"byte_end":10791,"line_start":249,"line_end":249,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10796,"byte_end":10819,"line_start":250,"line_end":250,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12349,"byte_end":12362,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"::if_std::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Attempt to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempt to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10868,"byte_end":10952,"line_start":252,"line_end":252,"column_start":9,"column_end":93}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10961,"byte_end":11002,"line_start":253,"line_end":253,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11011,"byte_end":11014,"line_start":254,"line_end":254,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11023,"byte_end":11070,"line_start":255,"line_end":255,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11079,"byte_end":11082,"line_start":256,"line_end":256,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11091,"byte_end":11150,"line_start":257,"line_end":257,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11159,"byte_end":11217,"line_start":258,"line_end":258,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11226,"byte_end":11307,"line_start":259,"line_end":259,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11316,"byte_end":11342,"line_start":260,"line_end":260,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11351,"byte_end":11354,"line_start":261,"line_end":261,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11363,"byte_end":11434,"line_start":262,"line_end":262,"column_start":9,"column_end":80}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11443,"byte_end":11505,"line_start":263,"line_end":263,"column_start":9,"column_end":71}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11514,"byte_end":11585,"line_start":264,"line_end":264,"column_start":9,"column_end":80}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11594,"byte_end":11675,"line_start":265,"line_end":265,"column_start":9,"column_end":90}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11684,"byte_end":11760,"line_start":266,"line_end":266,"column_start":9,"column_end":85}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11769,"byte_end":11820,"line_start":267,"line_end":267,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11829,"byte_end":11832,"line_start":268,"line_end":268,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11841,"byte_end":11880,"line_start":269,"line_end":269,"column_start":9,"column_end":48}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11889,"byte_end":11927,"line_start":270,"line_end":270,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11936,"byte_end":11939,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":11948,"byte_end":12019,"line_start":272,"line_end":272,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12028,"byte_end":12031,"line_start":273,"line_end":273,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12040,"byte_end":12060,"line_start":274,"line_end":274,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12069,"byte_end":12072,"line_start":275,"line_end":275,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12081,"byte_end":12144,"line_start":276,"line_end":276,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12153,"byte_end":12219,"line_start":277,"line_end":277,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12228,"byte_end":12286,"line_start":278,"line_end":278,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12295,"byte_end":12337,"line_start":279,"line_end":279,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13325,"byte_end":13332,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"consume","qualname":"::if_std::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12440,"byte_end":12514,"line_start":282,"line_end":282,"column_start":9,"column_end":83}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12523,"byte_end":12590,"line_start":283,"line_end":283,"column_start":9,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12599,"byte_end":12602,"line_start":284,"line_end":284,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12611,"byte_end":12682,"line_start":285,"line_end":285,"column_start":9,"column_end":80}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12691,"byte_end":12760,"line_start":286,"line_end":286,"column_start":9,"column_end":78}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12769,"byte_end":12843,"line_start":287,"line_end":287,"column_start":9,"column_end":83}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12852,"byte_end":12929,"line_start":288,"line_end":288,"column_start":9,"column_end":86}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":12938,"byte_end":13008,"line_start":289,"line_end":289,"column_start":9,"column_end":79}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13017,"byte_end":13070,"line_start":290,"line_end":290,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13079,"byte_end":13082,"line_start":291,"line_end":291,"column_start":9,"column_end":12}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13091,"byte_end":13163,"line_start":292,"line_end":292,"column_start":9,"column_end":81}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13172,"byte_end":13194,"line_start":293,"line_end":293,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13203,"byte_end":13206,"line_start":294,"line_end":294,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13215,"byte_end":13254,"line_start":295,"line_end":295,"column_start":9,"column_end":48}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":13263,"byte_end":13313,"line_start":296,"line_end":296,"column_start":9,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":14028,"byte_end":14031,"line_start":320,"line_end":320,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":14198,"byte_end":14201,"line_start":328,"line_end":328,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":16429,"byte_end":16432,"line_start":402,"line_end":402,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":16604,"byte_end":16607,"line_start":410,"line_end":410,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":18404,"byte_end":18407,"line_start":468,"line_end":468,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":18832,"byte_end":18835,"line_start":484,"line_end":484,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":19002,"byte_end":19005,"line_start":492,"line_end":492,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":19747,"byte_end":19750,"line_start":518,"line_end":518,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":19934,"byte_end":19937,"line_start":526,"line_end":526,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":10848,"byte_end":10857,"line_start":251,"line_end":251,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":49}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":14028,"byte_end":14031,"line_start":320,"line_end":320,"column_start":55,"column_end":58},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":14198,"byte_end":14201,"line_start":328,"line_end":328,"column_start":27,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":43297},"to":{"krate":0,"index":39}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":16429,"byte_end":16432,"line_start":402,"line_end":402,"column_start":57,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":16604,"byte_end":16607,"line_start":410,"line_end":410,"column_start":28,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":43297},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":18404,"byte_end":18407,"line_start":468,"line_end":468,"column_start":25,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":18832,"byte_end":18835,"line_start":484,"line_end":484,"column_start":55,"column_end":58},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":47}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":19002,"byte_end":19005,"line_start":492,"line_end":492,"column_start":27,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":43297},"to":{"krate":0,"index":47}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":19747,"byte_end":19750,"line_start":518,"line_end":518,"column_start":61,"column_end":64},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":49}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-io-0.3.21\\src\\lib.rs","byte_start":19934,"byte_end":19937,"line_start":526,"line_end":526,"column_start":30,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":43297},"to":{"krate":0,"index":49}}]}