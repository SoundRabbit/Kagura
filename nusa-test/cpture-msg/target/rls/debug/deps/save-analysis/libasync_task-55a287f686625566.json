{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0","program":"C:\\Users\\nenou_sa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_task","--edition=2018","C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=55a287f686625566","-C","extra-filename=-55a287f686625566","--out-dir","d:\\program\\Kagura\\nusa-test\\cpture-msg\\target\\rls\\debug\\deps","-L","dependency=d:\\program\\Kagura\\nusa-test\\cpture-msg\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\nenou_sa\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\program\\Kagura\\nusa-test\\cpture-msg\\target\\rls\\debug\\deps\\libasync_task-55a287f686625566.rmeta"},"prelude":{"crate_id":{"name":"async_task","disambiguator":[4762129106738327125,0]},"crate_root":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src","external_crates":[{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\header.rs","num":2,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}}],"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":0,"byte_end":2879,"line_start":1,"line_end":88,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2739,"byte_end":2744,"line_start":84,"line_end":84,"column_start":27,"column_end":32},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2746,"byte_end":2761,"line_start":84,"line_end":84,"column_start":34,"column_end":49},"alias_span":null,"name":"spawn_unchecked","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2763,"byte_end":2771,"line_start":84,"line_end":84,"column_start":51,"column_end":59},"alias_span":null,"name":"Runnable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2796,"byte_end":2808,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"alias_span":null,"name":"FallibleTask","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2810,"byte_end":2814,"line_start":85,"line_end":85,"column_start":37,"column_end":41},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2867,"byte_end":2878,"line_start":88,"line_end":88,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":0,"byte_end":2879,"line_start":1,"line_end":88,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":44},{"krate":0,"index":170},{"krate":0,"index":260},{"krate":0,"index":270},{"krate":0,"index":359},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397}],"decl_id":null,"docs":" Task abstraction for building executors.","sig":null,"attributes":[{"value":"/ Task abstraction for building executors.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":0,"byte_end":44,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":45,"byte_end":48,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To spawn a future onto an executor, we first need to allocate it on the heap and keep some","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":49,"byte_end":143,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ state attached to it. The state indicates whether the future is ready for polling, waiting to","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":144,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ be woken up, or completed. Such a stateful future is called a *task*.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":242,"byte_end":315,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":316,"byte_end":319,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ All executors have a queue that holds scheduled tasks:","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":320,"byte_end":378,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":379,"byte_end":382,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":383,"byte_end":390,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ let (sender, receiver) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":391,"byte_end":439,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":440,"byte_end":445,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ # // A future that will get spawned.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":446,"byte_end":486,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/ # let future = async { 1 + 2 };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":487,"byte_end":522,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":523,"byte_end":528,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ # // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":529,"byte_end":595,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ # let schedule = move |runnable| sender.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":596,"byte_end":664,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":665,"byte_end":670,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ # // Create a task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":671,"byte_end":694,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ # let (runnable, task) = async_task::spawn(future, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":695,"byte_end":760,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":761,"byte_end":768,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":769,"byte_end":772,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A task is created using either [`spawn()`], [`spawn_local()`], or [`spawn_unchecked()`] which","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":773,"byte_end":870,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ return a [`Runnable`] and a [`Task`]:","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":871,"byte_end":912,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":913,"byte_end":916,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":917,"byte_end":924,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # let (sender, receiver) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":925,"byte_end":975,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":976,"byte_end":981,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // A future that will be spawned.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":982,"byte_end":1019,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ let future = async { 1 + 2 };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1020,"byte_end":1053,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1054,"byte_end":1057,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1058,"byte_end":1122,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/ let schedule = move |runnable| sender.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1123,"byte_end":1189,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1190,"byte_end":1193,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Construct a task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1194,"byte_end":1218,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ let (runnable, task) = async_task::spawn(future, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1219,"byte_end":1282,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1283,"byte_end":1286,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Push the task into the queue by invoking its schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1287,"byte_end":1357,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ runnable.schedule();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1358,"byte_end":1382,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1383,"byte_end":1390,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1391,"byte_end":1394,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`Runnable`] is used to poll the task's future, and the [`Task`] is used to await its","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1395,"byte_end":1488,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1489,"byte_end":1500,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1501,"byte_end":1504,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Finally, we need a loop that takes scheduled tasks from the queue and runs them:","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1505,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1590,"byte_end":1593,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1594,"byte_end":1607,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ # let (sender, receiver) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1608,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1659,"byte_end":1664,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # // A future that will get spawned.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1665,"byte_end":1705,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ # let future = async { 1 + 2 };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1706,"byte_end":1741,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1742,"byte_end":1747,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1748,"byte_end":1814,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ # let schedule = move |runnable| sender.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1815,"byte_end":1883,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1884,"byte_end":1889,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # // Create a task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1890,"byte_end":1913,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/ # let (runnable, task) = async_task::spawn(future, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1914,"byte_end":1979,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1980,"byte_end":1985,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ # // Push the task into the queue by invoking its schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":1986,"byte_end":2058,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ # runnable.schedule();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2059,"byte_end":2085,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2086,"byte_end":2091,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ for runnable in receiver {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2092,"byte_end":2122,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/     runnable.run();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2123,"byte_end":2146,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2147,"byte_end":2152,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2153,"byte_end":2160,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2161,"byte_end":2164,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Method [`run()`][`Runnable::run()`] polls the task's future once. Then, the [`Runnable`]","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2165,"byte_end":2257,"line_start":66,"line_end":66,"column_start":1,"column_end":93}},{"value":"/ vanishes and only reappears when its [`Waker`][`core::task::Waker`] wakes the task, thus","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2258,"byte_end":2350,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/ scheduling it to be run again.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2351,"byte_end":2385,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\lib.rs","byte_start":2430,"byte_end":2501,"line_start":71,"line_end":71,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35727,"byte_end":35732,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"spawn","qualname":"::runnable::spawn","value":"pub fn spawn<F, S>(F, S) -> (Runnable, Task<F::Output>) where F: Future +\nSend + 'static, F::Output: Send + 'static, S: Fn(Runnable) -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new task.","sig":null,"attributes":[{"value":"/ Creates a new task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34517,"byte_end":34540,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34541,"byte_end":34544,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned [`Runnable`] is used to poll the `future`, and the [`Task`] is used to await its","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34545,"byte_end":34642,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34643,"byte_end":34654,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34655,"byte_end":34658,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Method [`run()`][`Runnable::run()`] polls the task's future once. Then, the [`Runnable`]","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34659,"byte_end":34751,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ vanishes and only reappears when its [`Waker`] wakes the task, thus scheduling it to be run","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34752,"byte_end":34847,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ again.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34848,"byte_end":34858,"line_start":21,"line_end":21,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34859,"byte_end":34862,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When the task is woken, its [`Runnable`] is passed to the `schedule` function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34863,"byte_end":34945,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/ The `schedule` function should not attempt to run the [`Runnable`] nor to drop it. Instead, it","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":34946,"byte_end":35044,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ should push it into a task queue so that it can be processed later.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35045,"byte_end":35116,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35117,"byte_end":35120,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If you need to spawn a future that does not implement [`Send`] or isn't `'static`, consider","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35121,"byte_end":35216,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ using [`spawn_local()`] or [`spawn_unchecked()`] instead.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35217,"byte_end":35278,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35279,"byte_end":35282,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35283,"byte_end":35297,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35298,"byte_end":35301,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35302,"byte_end":35309,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ // The future inside the task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35310,"byte_end":35344,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ let future = async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35345,"byte_end":35369,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35370,"byte_end":35404,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35405,"byte_end":35411,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35412,"byte_end":35415,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35416,"byte_end":35480,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ let (s, r) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35481,"byte_end":35517,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"/ let schedule = move |runnable| s.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35518,"byte_end":35579,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35580,"byte_end":35583,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Create a task with the future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35584,"byte_end":35647,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/ let (runnable, task) = async_task::spawn(future, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35648,"byte_end":35711,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35712,"byte_end":35719,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":37043,"byte_end":37054,"line_start":87,"line_end":87,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::runnable::spawn_local","value":"pub fn spawn_local<F, S>(F, S) -> (Runnable, Task<F::Output>) where\nF: Future + 'static, F::Output: 'static, S: Fn(Runnable) -> () + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new thread-local task.","sig":null,"attributes":[{"value":"/ Creates a new thread-local task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35962,"byte_end":35998,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":35999,"byte_end":36002,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This function is same as [`spawn()`], except it does not require [`Send`] on `future`. If the","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36003,"byte_end":36100,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/ [`Runnable`] is used or dropped on another thread, a panic will occur.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36101,"byte_end":36175,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36176,"byte_end":36179,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` feature for this crate is enabled.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36180,"byte_end":36265,"line_start":59,"line_end":59,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36266,"byte_end":36269,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36270,"byte_end":36284,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36285,"byte_end":36288,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36289,"byte_end":36296,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use async_task::Runnable;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36297,"byte_end":36326,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ use flume::{Receiver, Sender};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36327,"byte_end":36361,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ use std::rc::Rc;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36362,"byte_end":36382,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36383,"byte_end":36386,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ thread_local! {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36387,"byte_end":36406,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/     // A queue that holds scheduled tasks.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36407,"byte_end":36453,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/     static QUEUE: (Sender<Runnable>, Receiver<Runnable>) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36454,"byte_end":36536,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/ }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36537,"byte_end":36542,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36543,"byte_end":36546,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Make a non-Send future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36547,"byte_end":36577,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ let msg: Rc<str> = \"Hello, world!\".into();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36578,"byte_end":36624,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/ let future = async move {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36625,"byte_end":36654,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36655,"byte_end":36683,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36684,"byte_end":36690,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36691,"byte_end":36694,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36695,"byte_end":36759,"line_start":79,"line_end":79,"column_start":1,"column_end":65}},{"value":"/ let s = QUEUE.with(|(s, _)| s.clone());","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36760,"byte_end":36803,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"/ let schedule = move |runnable| s.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36804,"byte_end":36865,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36866,"byte_end":36869,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Create a task with the future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36870,"byte_end":36933,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/ let (runnable, task) = async_task::spawn_local(future, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":36934,"byte_end":37003,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":37004,"byte_end":37011,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":37012,"byte_end":37035,"line_start":86,"line_end":86,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39722,"byte_end":39737,"line_start":174,"line_end":174,"column_start":15,"column_end":30},"name":"spawn_unchecked","qualname":"::runnable::spawn_unchecked","value":"pub unsafe fn spawn_unchecked<F, S>(F, S) -> (Runnable, Task<F::Output>) where\nF: Future, S: Fn(Runnable) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates a new task without [`Send`], [`Sync`], and `'static` bounds.","sig":null,"attributes":[{"value":"/ Creates a new task without [`Send`], [`Sync`], and `'static` bounds.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38598,"byte_end":38670,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38671,"byte_end":38674,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This function is same as [`spawn()`], except it does not require [`Send`], [`Sync`], and","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38675,"byte_end":38767,"line_start":147,"line_end":147,"column_start":1,"column_end":93}},{"value":"/ `'static` on `future` and `schedule`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38768,"byte_end":38809,"line_start":148,"line_end":148,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38810,"byte_end":38813,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38814,"byte_end":38826,"line_start":150,"line_end":150,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38827,"byte_end":38830,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ - If `future` is not [`Send`], its [`Runnable`] must be used and dropped on the original","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38831,"byte_end":38923,"line_start":152,"line_end":152,"column_start":1,"column_end":93}},{"value":"/   thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38924,"byte_end":38937,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/ - If `future` is not `'static`, borrowed variables must outlive its [`Runnable`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38938,"byte_end":39023,"line_start":154,"line_end":154,"column_start":1,"column_end":86}},{"value":"/ - If `schedule` is not [`Send`] and [`Sync`], the task's [`Waker`] must be used and dropped on","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39024,"byte_end":39122,"line_start":155,"line_end":155,"column_start":1,"column_end":99}},{"value":"/   the original thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39123,"byte_end":39149,"line_start":156,"line_end":156,"column_start":1,"column_end":27}},{"value":"/ - If `schedule` is not `'static`, borrowed variables must outlive the task's [`Waker`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39150,"byte_end":39241,"line_start":157,"line_end":157,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39242,"byte_end":39245,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39246,"byte_end":39260,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39261,"byte_end":39264,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39265,"byte_end":39272,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ // The future inside the task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39273,"byte_end":39307,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/ let future = async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39308,"byte_end":39332,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39333,"byte_end":39367,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39368,"byte_end":39374,"line_start":165,"line_end":165,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39375,"byte_end":39378,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // If the task gets woken up, it will be sent into this channel.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39379,"byte_end":39447,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ let (s, r) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39448,"byte_end":39484,"line_start":168,"line_end":168,"column_start":1,"column_end":37}},{"value":"/ let schedule = move |runnable| s.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39485,"byte_end":39546,"line_start":169,"line_end":169,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39547,"byte_end":39550,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ // Create a task with the future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39551,"byte_end":39614,"line_start":171,"line_end":171,"column_start":1,"column_end":64}},{"value":"/ let (runnable, task) = unsafe { async_task::spawn_unchecked(future, schedule) };","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39615,"byte_end":39699,"line_start":172,"line_end":172,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":39700,"byte_end":39707,"line_start":173,"line_end":173,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41585,"byte_end":41593,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"Runnable","qualname":"::runnable::Runnable","value":"Runnable {  }","parent":null,"children":[{"krate":0,"index":247}],"decl_id":null,"docs":" A handle to a runnable task.","sig":null,"attributes":[{"value":"/ A handle to a runnable task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40266,"byte_end":40298,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40299,"byte_end":40302,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Every spawned task has a single [`Runnable`] handle, which only exists when the task is","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40303,"byte_end":40394,"line_start":197,"line_end":197,"column_start":1,"column_end":92}},{"value":"/ scheduled for running.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40395,"byte_end":40421,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40422,"byte_end":40425,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Method [`run()`][`Runnable::run()`] polls the task's future once. Then, the [`Runnable`]","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40426,"byte_end":40518,"line_start":200,"line_end":200,"column_start":1,"column_end":93}},{"value":"/ vanishes and only reappears when its [`Waker`] wakes the task, thus scheduling it to be run","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40519,"byte_end":40614,"line_start":201,"line_end":201,"column_start":1,"column_end":96}},{"value":"/ again.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40615,"byte_end":40625,"line_start":202,"line_end":202,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40626,"byte_end":40629,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`Runnable`] cancels the task, which means its future won't be polled again, and","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40630,"byte_end":40725,"line_start":204,"line_end":204,"column_start":1,"column_end":96}},{"value":"/ awaiting the [`Task`] after that will result in a panic.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40726,"byte_end":40786,"line_start":205,"line_end":205,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40787,"byte_end":40790,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40791,"byte_end":40805,"line_start":207,"line_end":207,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40806,"byte_end":40809,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40810,"byte_end":40817,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ use async_task::Runnable;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40818,"byte_end":40847,"line_start":210,"line_end":210,"column_start":1,"column_end":30}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40848,"byte_end":40878,"line_start":211,"line_end":211,"column_start":1,"column_end":31}},{"value":"/ use std::{panic, thread};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40879,"byte_end":40908,"line_start":212,"line_end":212,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40909,"byte_end":40912,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ // A simple executor.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40913,"byte_end":40938,"line_start":214,"line_end":214,"column_start":1,"column_end":26}},{"value":"/ static QUEUE: Lazy<flume::Sender<Runnable>> = Lazy::new(|| {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":40939,"byte_end":41003,"line_start":215,"line_end":215,"column_start":1,"column_end":65}},{"value":"/     let (sender, receiver) = flume::unbounded::<Runnable>();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41004,"byte_end":41068,"line_start":216,"line_end":216,"column_start":1,"column_end":65}},{"value":"/     thread::spawn(|| {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41069,"byte_end":41095,"line_start":217,"line_end":217,"column_start":1,"column_end":27}},{"value":"/         for runnable in receiver {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41096,"byte_end":41134,"line_start":218,"line_end":218,"column_start":1,"column_end":39}},{"value":"/             let _ignore_panic = panic::catch_unwind(|| runnable.run());","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41135,"byte_end":41210,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"/         }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41211,"byte_end":41224,"line_start":220,"line_end":220,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41225,"byte_end":41236,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/     sender","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41237,"byte_end":41251,"line_start":222,"line_end":222,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41252,"byte_end":41259,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41260,"byte_end":41263,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ // Create a task with a simple future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41264,"byte_end":41306,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ let schedule = |runnable| QUEUE.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41307,"byte_end":41367,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/ let (runnable, task) = async_task::spawn(async { 1 + 2 }, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41368,"byte_end":41440,"line_start":227,"line_end":227,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41441,"byte_end":41444,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ // Schedule the task and await its output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41445,"byte_end":41491,"line_start":229,"line_end":229,"column_start":1,"column_end":47}},{"value":"/ runnable.schedule();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41492,"byte_end":41516,"line_start":230,"line_end":230,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(smol::future::block_on(task), 3);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41517,"byte_end":41565,"line_start":231,"line_end":231,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41566,"byte_end":41573,"line_start":232,"line_end":232,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42557,"byte_end":42565,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"schedule","qualname":"<Runnable>::schedule","value":"pub fn schedule(Self)","parent":null,"children":[],"decl_id":null,"docs":" Schedules the task.","sig":null,"attributes":[{"value":"/ Schedules the task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41905,"byte_end":41928,"line_start":247,"line_end":247,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41933,"byte_end":41936,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method that passes the [`Runnable`] to the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41941,"byte_end":42028,"line_start":249,"line_end":249,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42033,"byte_end":42036,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42041,"byte_end":42055,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42060,"byte_end":42063,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42068,"byte_end":42075,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42080,"byte_end":42144,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/ let (s, r) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42149,"byte_end":42185,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ let schedule = move |runnable| s.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42190,"byte_end":42251,"line_start":256,"line_end":256,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42256,"byte_end":42259,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Create a task with a simple future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42264,"byte_end":42332,"line_start":258,"line_end":258,"column_start":5,"column_end":73}},{"value":"/ let (runnable, task) = async_task::spawn(async {}, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42337,"byte_end":42402,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42407,"byte_end":42410,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // Schedule the task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42415,"byte_end":42440,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(r.len(), 0);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42445,"byte_end":42472,"line_start":262,"line_end":262,"column_start":5,"column_end":32}},{"value":"/ runnable.schedule();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42477,"byte_end":42501,"line_start":263,"line_end":263,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(r.len(), 1);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42506,"byte_end":42533,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42538,"byte_end":42545,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44067,"byte_end":44070,"line_start":304,"line_end":304,"column_start":12,"column_end":15},"name":"run","qualname":"<Runnable>::run","value":"pub fn run(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Runs the task by polling its future.","sig":null,"attributes":[{"value":"/ Runs the task by polling its future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42766,"byte_end":42806,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42811,"byte_end":42814,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the task was woken while running, in which case the [`Runnable`] gets","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42819,"byte_end":42910,"line_start":278,"line_end":278,"column_start":5,"column_end":96}},{"value":"/ rescheduled at the end of this method invocation. Otherwise, returns `false` and the","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":42915,"byte_end":43003,"line_start":279,"line_end":279,"column_start":5,"column_end":93}},{"value":"/ [`Runnable`] vanishes until the task is woken.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43008,"byte_end":43058,"line_start":280,"line_end":280,"column_start":5,"column_end":55}},{"value":"/ The return value is just a hint: `true` usually indicates that the task has yielded, i.e.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43063,"byte_end":43156,"line_start":281,"line_end":281,"column_start":5,"column_end":98}},{"value":"/ it woke itself and then gave the control back to the executor.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43161,"byte_end":43227,"line_start":282,"line_end":282,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43232,"byte_end":43235,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If the [`Task`] handle was dropped or if [`cancel()`][`Task::cancel()`] was called, then","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43240,"byte_end":43332,"line_start":284,"line_end":284,"column_start":5,"column_end":97}},{"value":"/ this method simply destroys the task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43337,"byte_end":43378,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43383,"byte_end":43386,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ If the polled future panics, this method propagates the panic, and awaiting the [`Task`]","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43391,"byte_end":43483,"line_start":287,"line_end":287,"column_start":5,"column_end":97}},{"value":"/ after that will also result in a panic.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43488,"byte_end":43531,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43536,"byte_end":43539,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43544,"byte_end":43558,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43563,"byte_end":43566,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43571,"byte_end":43578,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43583,"byte_end":43647,"line_start":293,"line_end":293,"column_start":5,"column_end":69}},{"value":"/ let (s, r) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43652,"byte_end":43688,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/ let schedule = move |runnable| s.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43693,"byte_end":43754,"line_start":295,"line_end":295,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43759,"byte_end":43762,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ // Create a task with a simple future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43767,"byte_end":43835,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ let (runnable, task) = async_task::spawn(async { 1 + 2 }, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43840,"byte_end":43912,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43917,"byte_end":43920,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ // Run the task and check its output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43925,"byte_end":43966,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ runnable.run();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43971,"byte_end":43990,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(smol::future::block_on(task), 3);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":43995,"byte_end":44043,"line_start":302,"line_end":302,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44048,"byte_end":44055,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44997,"byte_end":45002,"line_start":335,"line_end":335,"column_start":12,"column_end":17},"name":"waker","qualname":"<Runnable>::waker","value":"pub fn waker(&Self) -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Returns a waker associated with this task.","sig":null,"attributes":[{"value":"/ Returns a waker associated with this task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44253,"byte_end":44299,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44304,"byte_end":44307,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44312,"byte_end":44326,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44331,"byte_end":44334,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44339,"byte_end":44346,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use smol::future;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44351,"byte_end":44372,"line_start":317,"line_end":317,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44377,"byte_end":44380,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44385,"byte_end":44449,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ let (s, r) = flume::unbounded();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44454,"byte_end":44490,"line_start":320,"line_end":320,"column_start":5,"column_end":41}},{"value":"/ let schedule = move |runnable| s.send(runnable).unwrap();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44495,"byte_end":44556,"line_start":321,"line_end":321,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44561,"byte_end":44564,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ // Create a task with a simple future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44569,"byte_end":44637,"line_start":323,"line_end":323,"column_start":5,"column_end":73}},{"value":"/ let (runnable, task) = async_task::spawn(future::pending::<()>(), schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44642,"byte_end":44722,"line_start":324,"line_end":324,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44727,"byte_end":44730,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ // Take a waker and run the task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44735,"byte_end":44772,"line_start":326,"line_end":326,"column_start":5,"column_end":42}},{"value":"/ let waker = runnable.waker();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44777,"byte_end":44810,"line_start":327,"line_end":327,"column_start":5,"column_end":38}},{"value":"/ runnable.run();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44815,"byte_end":44834,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44839,"byte_end":44842,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Reschedule the task by waking it.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44847,"byte_end":44887,"line_start":330,"line_end":330,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(r.len(), 0);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44892,"byte_end":44919,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/ waker.wake();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44924,"byte_end":44941,"line_start":332,"line_end":332,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(r.len(), 1);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44946,"byte_end":44973,"line_start":333,"line_end":333,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":44978,"byte_end":44985,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51259,"byte_end":51263,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" A spawned task.","sig":null,"attributes":[{"value":"/ A spawned task.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50057,"byte_end":50076,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50077,"byte_end":50080,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A [`Task`] can be awaited to retrieve the output of its future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50081,"byte_end":50148,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50149,"byte_end":50152,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`Task`] cancels it, which means its future won't be polled again. To drop the","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50153,"byte_end":50246,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ [`Task`] handle without canceling it, use [`detach()`][`Task::detach()`] instead. To cancel a","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50247,"byte_end":50344,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ task gracefully and wait until it is fully destroyed, use the [`cancel()`][Task::cancel()]","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50345,"byte_end":50439,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ method.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50440,"byte_end":50451,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50452,"byte_end":50455,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that canceling a task actually wakes it and reschedules one last time. Then, the executor","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50456,"byte_end":50554,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ can destroy the task by simply dropping its [`Runnable`][`super::Runnable`] or by invoking","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50555,"byte_end":50649,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/ [`run()`][`super::Runnable::run()`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50650,"byte_end":50690,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50691,"byte_end":50694,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50695,"byte_end":50709,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50710,"byte_end":50713,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50714,"byte_end":50721,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use smol::{future, Executor};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50722,"byte_end":50755,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50756,"byte_end":50776,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50777,"byte_end":50780,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let ex = Executor::new();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50781,"byte_end":50810,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50811,"byte_end":50814,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Spawn a future onto the executor.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50815,"byte_end":50855,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ let task = ex.spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50856,"byte_end":50887,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/     println!(\"Hello from a task!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50888,"byte_end":50927,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50928,"byte_end":50941,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50942,"byte_end":50949,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50950,"byte_end":50953,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Run an executor thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50954,"byte_end":50984,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/ thread::spawn(move || future::block_on(ex.run(future::pending::<()>())));","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":50985,"byte_end":51062,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51063,"byte_end":51066,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wait for the task's output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51067,"byte_end":51101,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(future::block_on(task), 3);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51102,"byte_end":51144,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51145,"byte_end":51152,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"must_use =\n  \"tasks get canceled when dropped, use `.detach()` to run them in the background\"","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51153,"byte_end":51247,"line_start":46,"line_end":46,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52192,"byte_end":52198,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"detach","qualname":"<Task<T>>::detach","value":"pub fn detach(Self)","parent":null,"children":[],"decl_id":null,"docs":" Detaches the task to let it keep running in the background.","sig":null,"attributes":[{"value":"/ Detaches the task to let it keep running in the background.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51692,"byte_end":51755,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51760,"byte_end":51763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51768,"byte_end":51782,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51787,"byte_end":51790,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51795,"byte_end":51802,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use smol::{Executor, Timer};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51807,"byte_end":51839,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51844,"byte_end":51872,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51877,"byte_end":51880,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let ex = Executor::new();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51885,"byte_end":51914,"line_start":74,"line_end":74,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51919,"byte_end":51922,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Spawn a deamon future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51927,"byte_end":51956,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/ ex.spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51961,"byte_end":51981,"line_start":77,"line_end":77,"column_start":5,"column_end":25}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51986,"byte_end":52000,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/         println!(\"I'm a daemon task looping forever.\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52005,"byte_end":52064,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/         Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52069,"byte_end":52124,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52129,"byte_end":52138,"line_start":81,"line_end":81,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52143,"byte_end":52149,"line_start":82,"line_end":82,"column_start":5,"column_end":11}},{"value":"/ .detach();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52154,"byte_end":52168,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52173,"byte_end":52180,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53438,"byte_end":53444,"line_start":124,"line_end":124,"column_start":18,"column_end":24},"name":"cancel","qualname":"<Task<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancels the task and waits for it to stop running.","sig":null,"attributes":[{"value":"/ Cancels the task and waits for it to stop running.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52314,"byte_end":52368,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52373,"byte_end":52376,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Returns the task's output if it was completed just before it got canceled, or [`None`] if","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52381,"byte_end":52474,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/ it didn't complete.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52479,"byte_end":52502,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52507,"byte_end":52510,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ While it's possible to simply drop the [`Task`] to cancel it, this is a cleaner way of","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52515,"byte_end":52605,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ canceling because it also waits for the task to stop running.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52610,"byte_end":52675,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52680,"byte_end":52683,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52688,"byte_end":52702,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52707,"byte_end":52710,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52715,"byte_end":52722,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use smol::{future, Executor, Timer};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52727,"byte_end":52767,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52772,"byte_end":52792,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52797,"byte_end":52825,"line_start":104,"line_end":104,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52830,"byte_end":52833,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let ex = Executor::new();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52838,"byte_end":52867,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52872,"byte_end":52875,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // Spawn a deamon future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52880,"byte_end":52909,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/ let task = ex.spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52914,"byte_end":52945,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52950,"byte_end":52964,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/         println!(\"Even though I'm in an infinite loop, you can still cancel me!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":52969,"byte_end":53055,"line_start":111,"line_end":111,"column_start":5,"column_end":91}},{"value":"/         Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53060,"byte_end":53115,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53120,"byte_end":53129,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53134,"byte_end":53141,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53146,"byte_end":53149,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Run an executor thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53154,"byte_end":53184,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/ thread::spawn(move || future::block_on(ex.run(future::pending::<()>())));","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53189,"byte_end":53266,"line_start":117,"line_end":117,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53271,"byte_end":53274,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ future::block_on(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53279,"byte_end":53307,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/     Timer::after(Duration::from_secs(3)).await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53312,"byte_end":53363,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/     task.cancel().await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53368,"byte_end":53396,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53401,"byte_end":53408,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53413,"byte_end":53420,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":55036,"byte_end":55044,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"fallible","qualname":"<Task<T>>::fallible","value":"pub fn fallible(Self) -> FallibleTask<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this task into a [`FallibleTask`].","sig":null,"attributes":[{"value":"/ Converts this task into a [`FallibleTask`].","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53565,"byte_end":53612,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53617,"byte_end":53620,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Like [`Task`], a fallible task will poll the task's output until it is","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53625,"byte_end":53699,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ completed or cancelled due to its [`Runnable`][`super::Runnable`] being","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53704,"byte_end":53779,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ dropped without being run. Resolves to the task's output when completed,","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53784,"byte_end":53860,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ or [`None`] if it didn't complete.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53865,"byte_end":53903,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53908,"byte_end":53911,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53916,"byte_end":53930,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53935,"byte_end":53938,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53943,"byte_end":53950,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use smol::{future, Executor};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53955,"byte_end":53988,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":53993,"byte_end":54013,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54018,"byte_end":54021,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let ex = Executor::new();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54026,"byte_end":54055,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54060,"byte_end":54063,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the executor.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54068,"byte_end":54108,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ let task = ex.spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54113,"byte_end":54144,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/     println!(\"Hello from a task!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54149,"byte_end":54188,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54193,"byte_end":54206,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ })","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54211,"byte_end":54217,"line_start":149,"line_end":149,"column_start":5,"column_end":11}},{"value":"/ .fallible();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54222,"byte_end":54238,"line_start":150,"line_end":150,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54243,"byte_end":54246,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ // Run an executor thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54251,"byte_end":54281,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/ thread::spawn(move || future::block_on(ex.run(future::pending::<()>())));","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54286,"byte_end":54363,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54368,"byte_end":54371,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ // Wait for the task's output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54376,"byte_end":54410,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(future::block_on(task), Some(3));","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54415,"byte_end":54463,"line_start":156,"line_end":156,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54468,"byte_end":54475,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54480,"byte_end":54483,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54488,"byte_end":54495,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use smol::future;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54500,"byte_end":54521,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54526,"byte_end":54529,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ // Schedule function which drops the runnable without running it.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54534,"byte_end":54603,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ let schedule = move |runnable| drop(runnable);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54608,"byte_end":54658,"line_start":163,"line_end":163,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54663,"byte_end":54666,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Create a task with the future and the schedule function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54671,"byte_end":54734,"line_start":165,"line_end":165,"column_start":5,"column_end":68}},{"value":"/ let (runnable, task) = async_task::spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54739,"byte_end":54791,"line_start":166,"line_end":166,"column_start":5,"column_end":57}},{"value":"/     println!(\"Hello from a task!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54796,"byte_end":54835,"line_start":167,"line_end":167,"column_start":5,"column_end":44}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54840,"byte_end":54853,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ }, schedule);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54858,"byte_end":54875,"line_start":169,"line_end":169,"column_start":5,"column_end":22}},{"value":"/ runnable.schedule();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54880,"byte_end":54904,"line_start":170,"line_end":170,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54909,"byte_end":54912,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Wait for the task's output.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54917,"byte_end":54951,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(future::block_on(task.fallible()), None);","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":54956,"byte_end":55012,"line_start":173,"line_end":173,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":55017,"byte_end":55024,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64507,"byte_end":64518,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"is_finished","qualname":"<Task<T>>::is_finished","value":"pub fn is_finished(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current task is finished.","sig":null,"attributes":[{"value":"/ Returns `true` if the current task is finished.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64317,"byte_end":64368,"line_start":399,"line_end":399,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64373,"byte_end":64376,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Note that in a multithreaded environment, this task can change finish immediately after calling this function.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64381,"byte_end":64495,"line_start":401,"line_end":401,"column_start":5,"column_end":119}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65869,"byte_end":65881,"line_start":448,"line_end":448,"column_start":12,"column_end":24},"name":"FallibleTask","qualname":"::task::FallibleTask","value":"FallibleTask {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A spawned task with a fallible response.","sig":null,"attributes":[{"value":"/ A spawned task with a fallible response.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65390,"byte_end":65434,"line_start":439,"line_end":439,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65435,"byte_end":65438,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ This type behaves like [`Task`], however it produces an `Option<T>` when","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65439,"byte_end":65515,"line_start":441,"line_end":441,"column_start":1,"column_end":77}},{"value":"/ polled and will return `None` if the executor dropped its","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65516,"byte_end":65577,"line_start":442,"line_end":442,"column_start":1,"column_end":62}},{"value":"/ [`Runnable`][`super::Runnable`] without being run.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65578,"byte_end":65632,"line_start":443,"line_end":443,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65633,"byte_end":65636,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ This can be useful to avoid the panic produced when polling the `Task`","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65637,"byte_end":65711,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/ future if the executor dropped its `Runnable`.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65712,"byte_end":65762,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"must_use =\n  \"tasks get canceled when dropped, use `.detach()` to run them in the background\"","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65763,"byte_end":65857,"line_start":447,"line_end":447,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66459,"byte_end":66465,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"detach","qualname":"<FallibleTask<T>>::detach","value":"pub fn detach(Self)","parent":null,"children":[],"decl_id":null,"docs":" Detaches the task to let it keep running in the background.","sig":null,"attributes":[{"value":"/ Detaches the task to let it keep running in the background.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65939,"byte_end":66002,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66007,"byte_end":66010,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66015,"byte_end":66029,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66034,"byte_end":66037,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66042,"byte_end":66049,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use smol::{Executor, Timer};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66054,"byte_end":66086,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66091,"byte_end":66119,"line_start":459,"line_end":459,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66124,"byte_end":66127,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let ex = Executor::new();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66132,"byte_end":66161,"line_start":461,"line_end":461,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66166,"byte_end":66169,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ // Spawn a deamon future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66174,"byte_end":66203,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/ ex.spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66208,"byte_end":66228,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66233,"byte_end":66247,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/         println!(\"I'm a daemon task looping forever.\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66252,"byte_end":66311,"line_start":466,"line_end":466,"column_start":5,"column_end":64}},{"value":"/         Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66316,"byte_end":66371,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66376,"byte_end":66385,"line_start":468,"line_end":468,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66390,"byte_end":66396,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ .fallible()","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66401,"byte_end":66416,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/ .detach();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66421,"byte_end":66435,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66440,"byte_end":66447,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67656,"byte_end":67662,"line_start":511,"line_end":511,"column_start":18,"column_end":24},"name":"cancel","qualname":"<FallibleTask<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancels the task and waits for it to stop running.","sig":null,"attributes":[{"value":"/ Cancels the task and waits for it to stop running.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66512,"byte_end":66566,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66571,"byte_end":66574,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Returns the task's output if it was completed just before it got canceled, or [`None`] if","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66579,"byte_end":66672,"line_start":479,"line_end":479,"column_start":5,"column_end":98}},{"value":"/ it didn't complete.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66677,"byte_end":66700,"line_start":480,"line_end":480,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66705,"byte_end":66708,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ While it's possible to simply drop the [`Task`] to cancel it, this is a cleaner way of","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66713,"byte_end":66803,"line_start":482,"line_end":482,"column_start":5,"column_end":95}},{"value":"/ canceling because it also waits for the task to stop running.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66808,"byte_end":66873,"line_start":483,"line_end":483,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66878,"byte_end":66881,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66886,"byte_end":66900,"line_start":485,"line_end":485,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66905,"byte_end":66908,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66913,"byte_end":66920,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ use smol::{future, Executor, Timer};","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66925,"byte_end":66965,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66970,"byte_end":66990,"line_start":489,"line_end":489,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":66995,"byte_end":67023,"line_start":490,"line_end":490,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67028,"byte_end":67031,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let ex = Executor::new();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67036,"byte_end":67065,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67070,"byte_end":67073,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ // Spawn a deamon future.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67078,"byte_end":67107,"line_start":494,"line_end":494,"column_start":5,"column_end":34}},{"value":"/ let task = ex.spawn(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67112,"byte_end":67143,"line_start":495,"line_end":495,"column_start":5,"column_end":36}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67148,"byte_end":67162,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/         println!(\"Even though I'm in an infinite loop, you can still cancel me!\");","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67167,"byte_end":67253,"line_start":497,"line_end":497,"column_start":5,"column_end":91}},{"value":"/         Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67258,"byte_end":67313,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67318,"byte_end":67327,"line_start":499,"line_end":499,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67332,"byte_end":67338,"line_start":500,"line_end":500,"column_start":5,"column_end":11}},{"value":"/ .fallible();","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67343,"byte_end":67359,"line_start":501,"line_end":501,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67364,"byte_end":67367,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ // Run an executor thread.","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67372,"byte_end":67402,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/ thread::spawn(move || future::block_on(ex.run(future::pending::<()>())));","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67407,"byte_end":67484,"line_start":504,"line_end":504,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67489,"byte_end":67492,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ future::block_on(async {","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67497,"byte_end":67525,"line_start":506,"line_end":506,"column_start":5,"column_end":33}},{"value":"/     Timer::after(Duration::from_secs(3)).await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67530,"byte_end":67581,"line_start":507,"line_end":507,"column_start":5,"column_end":56}},{"value":"/     task.cancel().await;","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67586,"byte_end":67614,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67619,"byte_end":67626,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67631,"byte_end":67638,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\header.rs","byte_start":3822,"byte_end":3828,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\header.rs","byte_start":8008,"byte_end":8014,"line_start":148,"line_end":148,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":10682,"byte_end":10689,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":10727,"byte_end":10734,"line_start":77,"line_end":77,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":10813,"byte_end":10820,"line_start":83,"line_end":83,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":31081,"byte_end":31086,"line_start":611,"line_end":611,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":37687,"byte_end":37694,"line_start":112,"line_end":112,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38011,"byte_end":38018,"line_start":124,"line_end":124,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41699,"byte_end":41707,"line_start":238,"line_end":238,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41732,"byte_end":41740,"line_start":239,"line_end":239,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41801,"byte_end":41809,"line_start":242,"line_end":242,"column_start":33,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41872,"byte_end":41880,"line_start":244,"line_end":244,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41890,"byte_end":41898,"line_start":246,"line_end":246,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":45256,"byte_end":45264,"line_start":346,"line_end":346,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":46533,"byte_end":46541,"line_start":389,"line_end":389,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51449,"byte_end":51453,"line_start":55,"line_end":55,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51484,"byte_end":51488,"line_start":56,"line_end":56,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51514,"byte_end":51518,"line_start":58,"line_end":58,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51585,"byte_end":51589,"line_start":61,"line_end":61,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51658,"byte_end":51662,"line_start":63,"line_end":63,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51678,"byte_end":51682,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64781,"byte_end":64785,"line_start":413,"line_end":413,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64902,"byte_end":64906,"line_start":420,"line_end":420,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65211,"byte_end":65215,"line_start":431,"line_end":431,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65917,"byte_end":65929,"line_start":452,"line_end":452,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67745,"byte_end":67757,"line_start":516,"line_end":516,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67941,"byte_end":67953,"line_start":524,"line_end":524,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\utils.rs","byte_start":68335,"byte_end":68340,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\utils.rs","byte_start":68724,"byte_end":68728,"line_start":27,"line_end":27,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\header.rs","byte_start":3822,"byte_end":3828,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\header.rs","byte_start":8008,"byte_end":8014,"line_start":148,"line_end":148,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":10682,"byte_end":10689,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2999}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":10727,"byte_end":10734,"line_start":77,"line_end":77,"column_start":25,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2610}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":10813,"byte_end":10820,"line_start":83,"line_end":83,"column_start":15,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\raw.rs","byte_start":31081,"byte_end":31086,"line_start":611,"line_end":611,"column_start":32,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":37687,"byte_end":37694,"line_start":112,"line_end":112,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":38011,"byte_end":38018,"line_start":124,"line_end":124,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":12567}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41699,"byte_end":41707,"line_start":238,"line_end":238,"column_start":22,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2989}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41732,"byte_end":41740,"line_start":239,"line_end":239,"column_start":22,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3001}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41801,"byte_end":41809,"line_start":242,"line_end":242,"column_start":33,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":8281}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41872,"byte_end":41880,"line_start":244,"line_end":244,"column_start":36,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":8282}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":41890,"byte_end":41898,"line_start":246,"line_end":246,"column_start":6,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":45256,"byte_end":45264,"line_start":346,"line_end":346,"column_start":15,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\runnable.rs","byte_start":46533,"byte_end":46541,"line_start":389,"line_end":389,"column_start":21,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51449,"byte_end":51453,"line_start":55,"line_end":55,"column_start":31,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":2989}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51484,"byte_end":51488,"line_start":56,"line_end":56,"column_start":25,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":3001}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51514,"byte_end":51518,"line_start":58,"line_end":58,"column_start":19,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":3030}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51585,"byte_end":51589,"line_start":61,"line_end":61,"column_start":36,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":8281}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51658,"byte_end":51662,"line_start":63,"line_end":63,"column_start":39,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":8282}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":51678,"byte_end":51682,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64781,"byte_end":64785,"line_start":413,"line_end":413,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":64902,"byte_end":64906,"line_start":420,"line_end":420,"column_start":20,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":12567}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65211,"byte_end":65215,"line_start":431,"line_end":431,"column_start":24,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":65917,"byte_end":65929,"line_start":452,"line_end":452,"column_start":9,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67745,"byte_end":67757,"line_start":516,"line_end":516,"column_start":20,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":12567}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\task.rs","byte_start":67941,"byte_end":67953,"line_start":524,"line_end":524,"column_start":24,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":9300}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\utils.rs","byte_start":68335,"byte_end":68340,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":3224}},{"span":{"file_name":"C:\\Users\\nenou_sa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-task-4.2.0\\src\\utils.rs","byte_start":68724,"byte_end":68728,"line_start":27,"line_end":27,"column_start":19,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3224}}]}